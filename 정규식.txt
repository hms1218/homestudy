정규 표현식
문자열에서 특정 패턴을 찾거나, 일치 여부를 확인, 변경할 때 사용하는 도구

[   ]: 괄호 안의 조건에 맞는 문자 1개
[a-z] : a~z까지 소문자
[A-Z] : A~Z까지 대문자
[0-9] : 숫자 0~9까지

\d : 0~9
\D : 숫자가 아닌 것
\w : 영문자, 숫자, _
\W : \w 이외의 문자

/ ... /

반복패턴
* : 0회 이상 반복
+ : 1회 이상 반복
? : 0 또는 1회
{n} : n번 반복
{n,} : n번 이상 반복
{n,m} : n~m번 반복

위치패턴
^ : 문자열의 시작
$ : 문자열의 끝

[\w.-] : 영문자,숫자,_,.,- 중에 1글자가 올수있다.
[\w.-]+ : 영문자,숫자,_,.,- 중에 하나 이상의 문자로 이루어진 문자열

[\w.-]+@[\w.-]\.\w+

let emailregex = /^[\w.-]+@[\w.-]\.\w+$/

let phoneregex = /^010-[0-9]{4}-[0-9]{4}$/
	           /^010-\d{4}-\d{4}$/
주민등록번호 정규식
let dddd = /^[0-9]{6}-[0-9]{7}$/
	  /^\d{6}-\d{7}$/
	  /^([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])-[1-4][0-9]{6}$/
[abc] -> a,b,c 중 1개

let result = emailregex.test("lee@korea.com");
-> true / false

1. 정규표현식
2. 이벤트처리
3. 이벤트처리시 태그에 바로 적용하는 것