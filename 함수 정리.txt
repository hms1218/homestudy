1. eval()
문자열로 표시된 코드 실행

2. IsFinite()
:매개변수로 전달된 값이 유한한 수인가?
유한하면true/무한하면false

3.isNaN()
: 매개변수로 전달된 값이 NaN인가?
숫자가 아니라면 숫자로 변환 "12"->12
숫자가 아니면 true 맞으면 false

4.parseFloat()
:문자열을 읽어서 실수로 반환

5.parseInt()
:문자열을 읽어서 정수로 반환

6.encodeURI()
:URI에서 주소를 표시하는 특수문자 제외하고 모든 문자를 이스케이프 시퀀스 처리

----------------------------
JS 객체 및 메서드

-숫자 메서드
1. Math.random()
:0과 1사이의 난수 제공

2. Math.floor()
:소수점 내림

3. Math.ceil()
: 소수점 올림

4. Math.round()
: 소수점 반올림

5. Math.max()
: 최대값 찾기

6. Math.min()
: 최소값 찾기

7. Math.pow()
: 거듭제곱

8. Math.sqrt()
: 제곱근

9. Math.abs()
: 절대값

-문자열 메서드
1.indexOf()
: 문자열 내에서 지정한 문자열의 첫번째 인덱스 반환 ex) 7번 인덱스

2. lastIndexOf()
: 마지막 인덱스 값 반환

3. includes()
: 문자열에 특정 부분 문자열이 포함되어 있으면 true, 아니면 false

4. startsWith()
: 문자열이 지정한 문자열로 시작하는지 확인

5. slice() -> 문자열.slice(7,12)
: 문자열의 일부를 잘라내어 새로운 문자열로 반환 

6. replace()
: 문자열의 일부 내용을 새로운 문자열로 치환

7. concat()
: 하나 이상의 문자열을 연결

8. trim()
: 양쪽 공백 제거

9. split()
: 문자열을 지정한 구분자로 나눠서 배열로 반환

10. charAt()
: 지정한 인덱스의 문자를 반환

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
콜백함수
1. forEach(콜백함수)
:배열의 각 요소에 대해 콜백함수를 실행
반환값은 없고, 주로 부수효과에 활용

2.map(콜백함수)
: 배열의 각 요소를 변환하여 새로운 배열을 만든다.
ex) let doubled = [1,2,3];
doubled = doubled.amp((item) => (item*2));
2배증가!

3. filter(콜백함수)
: 주어진 조건을 만족하는 요소들만 골라서 새로운 배열을 만든다.
ex) let evens = [1,2,3,4,5].filter(e => e%2===0);

4. reduce(콜백, 시작값(옵션))
: 배열의 모든 요소를 누적하여 단일값으로 만든다.
ex) let sum = [1,2,3,4,5].reduce((sum,item => sum+item);

5. concat()
: 두 개 이상의 배열을 합치기
ex) let newArr = [1,2].concat([3,4]);
[1,2,3,4]

6. slice()
: 배열의 일부분을 잘라서 새로운 배열 반환
ex) let subArr = [1,2,3,4,5].slice(1,4); ->1번 인덱스부터 4번 전까지
[2,3,4]

7. reverse()
: 배열의 요소 순서를 반대로 바꾼다.
arr = [1,2,3].reverse();

8. sort()
: 배열의 요소를 정렬한다.
ex) [3,1,2].sort((a,b) => a-b);